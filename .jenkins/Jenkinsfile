pipeline {
    environment {
        BLUE_OCEAN_URL = "${env.JENKINS_URL}blue/organizations/jenkins/${env.JOB_NAME}/detail/${env.JOB_BASE_NAME}/${env.BUILD_NUMBER}/pipeline/"

        // These JVM system properties are for sbt, and may be used by other Java applications.
        // sbt needs user.home for locating its caches.
        JAVA_OPTS = "-Duser.home=${WORKSPACE}"
    }
    options {
        // See https://javadoc.jenkins.io/hudson/tasks/LogRotator.html
        buildDiscarder(logRotator(daysToKeepStr: '60', numToKeepStr: '100'))

        disableConcurrentBuilds()
        skipStagesAfterUnstable()
        timeout(time: 10, unit: 'MINUTES')
        timestamps()
    }

    agent {
        dockerfile {
            filename 'Dockerfile.build'
            dir '.jenkins'
        }
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building..'
                sh script: 'printenv', label: 'Print the environment'
                sh script: "sbt test:compile", label: 'Compile the code'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
                sh script: "sbt test", label: 'Run tests'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: "target/scala-*/**", fingerprint: true
            archiveArtifacts artifacts: "target/streams/**", fingerprint: true
            junit "target/test-reports/**/*.xml"
        }
        fixed {
            slackSend channel: '#dataingestion', color: 'good',
                      message: "The pipeline <${env.BUILD_URL}|${currentBuild.fullDisplayName}> completed successfully. :tada:"
        }
        regression {
            slackSend channel: '#dataingestion', color: 'danger',
                      message: "The pipeline <${env.BUILD_URL}|${currentBuild.fullDisplayName}> has *regressed*. :boom:"
        }
    }
}
